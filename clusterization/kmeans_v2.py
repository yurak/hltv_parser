import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
df = pd.read_csv("de_mirage_t_ct.csv", sep=';', decimal=',')  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π —à–ª—è—Ö
df = df.dropna(subset=['ct_role'])
# üîπ –í–∏–±—ñ—Ä –æ–∑–Ω–∞–∫ –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó
features = df[['ct_utility', 'ct_firepower']]

# üîπ –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è (–Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ, –∞–ª–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(features)

# üîπ –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è KMeans
kmeans = KMeans(n_clusters=5, random_state=42)  # –º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª–∞—Å—Ç–µ—Ä—ñ–≤
df['cluster'] = kmeans.fit_predict(X_scaled)

# üîπ –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è: –∫–æ–ª—å–æ—Ä–∏ ‚Äî —Å–ø—Ä–∞–≤–∂–Ω—è —Ä–æ–ª—å (ct_role)
plt.figure(figsize=(10, 6))
roles = df['ct_role'].unique()
breakpoint()
colors = plt.cm.get_cmap('tab10', len(roles))
markers = ['o', 's', '^', 'D', 'v', '*', 'P', 'X', 'h', '+']

for i, role in enumerate(roles):
    subset = df[df['ct_role'] == role]
    plt.scatter(subset['ct_utility'], subset['ct_firepower'], 
                label=role, s=60, alpha=0.7, color=colors(i), marker=markers[i % len(markers)])

# üîπ –¶–µ–Ω—Ç—Ä–æ—ó–¥–∏
centroids = scaler.inverse_transform(kmeans.cluster_centers_)
plt.scatter(centroids[:, 0], centroids[:, 1], marker='X', s=200, c='black', label='Centroids')

plt.xlabel("CT Support")
plt.ylabel("CT Firepower")
plt.title("K-Means Clustering by ct_support & ct_firepower (colored by ct_role)")
plt.legend()
plt.grid(True)
plt.show()
